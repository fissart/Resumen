%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.02.0 (http://poppler.freedesktop.org)
%%Creator: dvips(k) 2021.1 (TeX Live 2022/dev)  Copyright 2021 Radical Eye Software
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 199 182
%%HiResBoundingBox: 0 0 198.43 181.08
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CMMI12
%!FontType1-1.0: CMMI12
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(c\) 1997, 2009 American Mathematical Society \(<htt\
p://www.ams.org>\), with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -204 747 714] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 12 /beta put
dup 14 /delta put
dup 15 /epsilon1 put
dup 16 /zeta put
dup 18 /theta put
dup 65 /A put
dup 66 /B put
dup 67 /C put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F95CB8F8CEBD4396C74A303DCB3A46C281B472F99892DCADA5FC6E4C2524AE72
569652A7D664B73CC839B5405D299F805DA5E9FE5C41F969093CFD7B26C9805B
6EC2DA5C4EA81C285458F5CCCDC02F82AC0E127BDB8F9E0A94383740D13431F8
554EF5B7648E7C56F5F38740D67CB57E0007961013F2F16CDB5BA3F5C1414F66
AECF5AFFA42AA51168B07908FD53D54A2CFEF17624741ECA22F7626685779286
2322FB1AF870850D965A0F8F002AF1AB0B8060E79670737B327AAA32351389B3
098031932C859972770C955E92F9E6D40CDE8CED6DA05BB3A2D5284E1BC7B048
3E02CE02520F82F677EBF4B9A06E0C2F04A5304E2AB743181B97ADDFA58D0D0C
3C62C0332A959DE33770CB5B5C4580BB1DB904DAD8ABAF8C4CF3C1AF6575A0D7
924F06F38C2E39114E7CEA2817C3D42E9794598A6537B6F538C45F4FD551BA01
51D0E851F0B0415F317DAD4CD24AEC63EF28DA8477C4A87833A6D97C4D4B8EE8
5F53BBB1546A83CE4D44483A9B089E0AA593D182082D2AC4C7771389256A2FB9
4DAFBDC4F396E6D833693D34BFCDD344C1FB26D50EF61CCD2DF65C4050280BE9
A7BE02F684E21C07D9ABD6C17447919F2DBFDE4DEDB399FC1FB7BDC1C10D7B47
9BFF38BB3E5AD062C187B6A609C843D3C53152C2A7DFE5DD8701707FCC19D80E
F6907D5BB7071C709B4F84255A1D42D79106D40B0D5A4529A7179B0195B29227
B98C92CDF4DEB0756490D8B4E4A9EE1F263539890A3537B6BD8699EF453DF7A8
0F3286AC0BDC9DC1EB4BE0C68007C84C4D470C26D9ECA5FD0A367799ADDABAC8
25BA820818F9A29D4395BF07236DD05CF11595D2B1AE9DCBA6EB59A671DB46F8
0E2FCFC452393BFD11E38785B4CDEBB57CEF7D4601928A7246FB3AE6A5386697
364C305BCBFD73C264125956D29135F1E52B1ADB2292D816AF519D5F6CE03794
A12AD6F948C86AB550D24678CEFD025035E9CC07DCD3A0B5D6B2E5FE3C850FE2
C7EB3A93524064BFA4775B0DB6F6991EBD056157C7A823BF8EEFA86CC58AA1D9
65006F3B5C0F73C31812759773DE6711D6A82130505E019666F869C047FA9654
445729BD9B35E1A8F79F016C7606F929344B831A0F75B763D82595F8EC4CBBE5
0603A9F463F7307AF7AA7441B6560F5DEBF5192BA5B1D76D468E6B25488843FC
398CE93F84CF246C672D103C9DCB6D4017244E2859037B30C4175FE3115003AA
C928698474371396BCC1686ACD20F34D21CCCA52ADFFA5B50CBA9A05334DA110
F9FF86BF0622895966F02CF57C48A574E47BABAC9287533E516B0C7277AF6F0D
163508E02447DD39A0D0F684276CE4A151A2FCA79A462F0032AB3EA1BCD6EAC1
A872D16BFE2D4378D243A60DAF3C74AE326340113F713E4AB4009F923DAB414A
417E6F002927CCFC1CAC925471E0FC9053939F54B545EECAACD535A4DB2EE456
1164E7E4522CA44FBEDF5C47A2F42BAEDE50374A9E7B2B1177F1CC3398C59CD8
2E41E7A11DB24C45B6C9A9B0A9A902D680770A714E3A85287AE9B4A27CD3C1A5
88BF05E1CEE4F9BB19E39D708B7AE38711EA57E9CA4163C82120BB619C6C0634
BF5F65565F4A1BE6A5B76414550A24F25FC7B675B8EF1742C2DC2B12D48F7CB1
CDC56FA5E6F86351D9AC24E4214CCDD9C25B63BF1066A0A434FA6E40CD0D3F58
97D792487183A17CD458DF27831FA05071595AE8EFA4EEB9E9AC474C2DF0D5FE
1BE7D4A10604D7B8CDEDB8F7DE6B8F2306ABA34BDE535A577291A71E94FBA154
F6D7D35732DC403C7394E1EA547535635ABB77BEC20E62CAB3743787689C0A44
CA317DAA6BE3A1388F3A10ECCC2F85419E8FF67D76961181BAAB5A006C20F72D
D71642113499AF5C3C014C1CB6A94BEB17328A1E482A7A4A5B5827CD12A7F8F3
F3314DA69958853A5DC70954E0FF4031E213BCD4EB86782A592BA97D342DC76E
7149B6AD75B430BBB83F0523E7E510E0D7C178E1FF3E01342766E1ABDBF1AFAA
EE6B0B9BE3D72EF52CEAD9AD8C9788F80FB9D413BCB2945A588D6A981D333EB8
1C299DF9D0FEB4E3464430DE0CCE3DF71002CF7FC30895CDF888C2704752D2A2
CE6EA986F9C8B41DCB3D9F737A989336CDF1E486947196AAE3676E7B6F0DA05F
CC5ACEF4DB04C666A4B20DA884F7ADE8EC7A1ED3AAF8DAC2A1BD25E6DEBDE2B1
B8D27FDE4040A0CE86DE5918607DA0447777F8EAD05E575F228C1332EDB9E01D
E0A6F157308CDF4BECD8EB531887A6B750E8C27D411E540232B4AD030B94B176
2C3D39A46D89CB083BB1C9D096EB3A2B688518C42E3E9D5AB5A602B60B00279D
113A50F3289CDC2450E9A9A162FD5ED8D91FB6ED61576354A276627086FCA30C
8F5352E68B715332E7DB7E27851989C931915CA2B89F5D373461DC866F15D3A3
78F52DF79EE1FF8A447E19EED4F42481606527B67054434B3562E894531BBBFA
1AC4244679F845DE0CCCD4A0A63C6B5853E33EFCC3A0B8BCDF67B522F239445D
AB0C1DC3C58E2B2BE0AB6A1CA41FAF2019224DE9C135E6ED17DAEE8644FB2535
402AC74993BFB12F62075BC0BEF0CE97D4773472FD8EE6F651E99BC27FB36D90
18D9AA3FE0B04B44BFE9A2C84B75104E0C985FF4A0B6143841EFBDC8AE445ACB
23905BB6AD0DBF987B13D84A6D275C53BEF80153E9CBDEF73C161F3367BDFE3E
0C755913EB68F9BBAA47412123950F420B8616687F5ADA89DDA73C51F282EE33
7E99EA617F12C386A68D7E531055288F4360783FEAE26028CBB91D019F53851B
4E66A3959F956077ACB2A7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F7_0 /CMMI12 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/alpha/beta/.notdef/delta/epsilon1
  /zeta/.notdef/theta/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 198.43 181.08 re
W
q
q
[0.1 0 0 0.1 0 0] cm
19.9227 w
1 J
1 j
/DeviceRGB {} CS
[1 0.5 0] SC
966.711 599.609 m
966.711 863.809 752.535 1077.98 488.336 1077.98 c
224.137 1077.98 9.96094 863.809 9.96094 599.609 c
9.96094 335.41 224.137 121.238 488.336 121.238 c
752.535 121.238 966.711 335.41 966.711 599.609 c
h
S
[35.3663 35.3663 11.7888 23.5775] 0 d
11.9536 w
/DeviceRGB {} CS
[0 0 1] SC
1700.21 599.609 m
1700.21 916.648 1443.21 1173.66 1126.17 1173.66 c
809.129 1173.66 552.117 916.648 552.117 599.609 c
552.117 282.57 809.129 25.5625 1126.17 25.5625 c
1443.21 25.5625 1700.21 282.57 1700.21 599.609 c
h
S
[] 0 d
4.99936 w
/DeviceGray {} CS
[0] SC
1843.73 1077.98 m
1843.73 1474.28 1522.46 1795.55 1126.17 1795.55 c
729.871 1795.55 408.605 1474.28 408.605 1077.98 c
408.605 681.688 729.871 360.422 1126.17 360.422 c
1522.46 360.422 1843.73 681.688 1843.73 1077.98 c
h
S
29.9962 w
1843.73 1077.98 m
1843.73 1077.98 l
S
1126.17 1795.55 m
1126.17 1795.55 l
S
408.605 1077.98 m
408.605 1077.98 l
S
1126.17 360.422 m
1126.17 360.422 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 3.71992 96.3602] Tm
0 0 Td
/F7_0 11.9552 Tf
(A)
[8.775117
0] Tj
1.26249 TJm
152.04 -87.7199 Td
(B)
[8.882714
0] Tj
0.224635 TJm
183.9599 14.2801 Td
(C)
[8.36864
0] Tj
-2.62516 TJm
12.7199 -41.5199 Td
(\013)
[7.436134
0] Tj
-0.324955 TJm
101.6402 49.8 Td
(\014)
[6.611226
0] Tj
0.93734 TJm
49.68 -3.6 Td
(\022)
[5.451571
0] Tj
4.31248 TJm
71.3999 -24.3602 Td
(\016)
[5.176602
0] Tj
1.38763 TJm
108.8401 -13.5602 Td
(\017)
[4.722304
0] Tj
3.53698 TJm
68.0401 -65.8801 Td
(\020)
[5.10487
0] Tj
-4.61216 TJm
Q
/DeviceRGB {} cs
[1 0.5 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 41.1602 1.44023] Tm
0 0 Td
/F7_0 11.9552 Tf
(\016)
[5.176602
0] Tj
1.38738 TJm
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CMMI12
%%EOF
